openapi: '3.0.2'
info:
  title: Ticket Management API
  version: '1.0'
  description: API for managing support tickets

servers:
  - url: https://ag-customer-api.azurewebsites.net/  # Replace with your actual server URL

components:
  schemas:
    Ticket:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the ticket
        state:
          type: string
          description: Current state of the ticket
        priority:
          type: string
          description: Priority level of the ticket
        long_Description:
          type: string
          description: Detailed description of the ticket
        assignedTo:
          type: string
          description: Name of the person assigned to the ticket
        opened_at:
          type: string
          format: date-time
          description: Date and time the ticket was opened
        closed_at:
          type: string
          format: date-time
          description: Date and time the ticket was closed
        companyID:
          type: integer
          description: Unique identifier of the company
        daysOpen:
          type: integer
          description: Number of days the ticket has been open
        callerID:
          type: integer
          description: Unique identifier of the ticket caller
        companyName:
          type: string
          description: Name of the company associated with the ticket
        short_Description:
          type: string
          description: Brief description of the ticket
      required:
        - id
        - state
        - companyName
        - short_Description

paths:
  /tickets:
    post:
      summary: Create a new ticket
      operationId: CreateTicket
      tags:
        - Ticket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        '201':
          description: Ticket created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '400':
          description: Invalid input

  /tickets/{id}:
    get:
      summary: Get ticket by ID
      operationId: GetTicketById
      tags:
        - Ticket
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response with ticket details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '404':
          description: Ticket not found

    put:
      summary: Update an existing ticket
      operationId: UpdateTicket
      tags:
        - Ticket
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        '204':
          description: Ticket updated successfully
        '400':
          description: Invalid input
        '404':
          description: Ticket not found

    delete:
      summary: Delete a ticket
      operationId: DeleteTicket
      tags:
        - Ticket
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Ticket deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '404':
          description: Ticket not found

  /tickets/customer/{customerName}:
    get:
      summary: Get tickets by customer name
      operationId: GetTicketsByCustomerName
      tags:
        - Ticket
      parameters:
        - name: customerName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with tickets for the customer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'