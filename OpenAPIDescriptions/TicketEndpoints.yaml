openapi: '3.0.2'
info:
  title: Tickets Management API
  version: '1.0'
  description: API for managing ticket records

servers:
  - url: https://ag-customer-api.azurewebsites.net/  # Replace with your actual server URL

components:
  schemas:
    Ticket:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the ticket
        title:
          type: string
          description: Title or brief description of the ticket
        state:
          type: string
          description: Current state of the ticket
        priority:
          type: string
          description: Priority level of the ticket
        long_Description:
          type: string
          description: Detailed description of the ticket
        assignedTo:
          type: string
          description: Name or identifier of the person assigned to the ticket
        opened_at:
          type: string
          format: date-time
          description: Date and time when the ticket was opened
        closed_at:
          type: string
          format: date-time
          description: Date and time when the ticket was closed
        companyID:
          type: integer
          description: Identifier of the company associated with the ticket
        daysOpen:
          type: integer
          description: Number of days the ticket has been open
        callerID:
          type: integer
          description: Identifier of the person who initiated the ticket
      required:
        - title
        - state
        - companyID

  parameters:
    TicketId:
      name: id
      in: path
      description: Unique identifier of the ticket
      required: true
      schema:
        type: integer

paths:
  /tickets:
    get:
      summary: Get all tickets
      operationId: GetAllTickets
      tags:
        - Ticket
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'

    post:
      summary: Create a new ticket
      operationId: CreateTicket
      tags:
        - Ticket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        '201':
          description: Ticket created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'

  /tickets/{id}:
    get:
      summary: Get a specific ticket by ID
      operationId: GetTicketById
      tags:
        - Ticket
      parameters:
        - $ref: '#/components/parameters/TicketId'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '404':
          description: Ticket not found

    put:
      summary: Update an existing ticket
      operationId: UpdateTicket
      tags:
        - Ticket
      parameters:
        - $ref: '#/components/parameters/TicketId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        '204':
          description: Ticket updated successfully
        '404':
          description: Ticket not found

    delete:
      summary: Delete a ticket
      operationId: DeleteTicket
      tags:
        - Ticket
      parameters:
        - $ref: '#/components/parameters/TicketId'
      responses:
        '200':
          description: Ticket deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '404':
          description: Ticket not found

  /tickets/customer/{customerId}:
    get:
      summary: Get tickets by customer ID
      operationId: GetTicketsByCustomerId
      tags:
        - Ticket
      parameters:
        - name: customerId
          in: path
          description: Identifier of the customer
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'