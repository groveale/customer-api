openapi: '3.0.2'
info:
  title: Customer Management API
  version: '1.0'
  description: API for managing customer records

servers:
  - url: https://ag-customer-api.azurewebsites.net/  # Replace with your actual server URL

components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the customer
        name:
          type: string
          description: Name of the customer
        strategic:
          type: boolean
          description: Indicates if the customer is a strategic account
        accountOwner:
          type: string
          description: Name of the account owner
        sellerID:
          type: string
          description: Identifier for the seller associated with the customer
      required:
        - name

  parameters:
    CustomerId:
      name: id
      in: path
      description: Unique identifier of the customer
      required: true
      schema:
        type: integer

paths:
  /customer:
    get:
      summary: Get all customers
      operationId: GetAllCustomers
      tags:
        - Customer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'

    post:
      summary: Create a new customer
      operationId: CreateCustomer
      tags:
        - Customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: Customer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'

  /customer/{id}:
    get:
      summary: Get a specific customer by ID
      operationId: GetCustomerById
      tags:
        - Customer
      parameters:
        - $ref: '#/components/parameters/CustomerId'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Customer not found

    put:
      summary: Update an existing customer
      operationId: UpdateCustomer
      tags:
        - Customer
      parameters:
        - $ref: '#/components/parameters/CustomerId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '204':
          description: Customer updated successfully
        '404':
          description: Customer not found

    delete:
      summary: Delete a customer
      operationId: DeleteCustomer
      tags:
        - Customer
      parameters:
        - $ref: '#/components/parameters/CustomerId'
      responses:
        '200':
          description: Customer deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Customer not found