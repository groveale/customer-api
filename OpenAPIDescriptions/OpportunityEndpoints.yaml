openapi: '3.0.2'
info:
  title: Opportunity Management API
  version: '1.0'
  description: API for managing opportunities and related orders

servers:
  - url: https://ag-customer-api.azurewebsites.net/ # Replace with your actual server URL

components:
  schemas:
    Opportunity:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the opportunity
        account:
          type: string
          description: Account name associated with the opportunity
        territory:
          type: string
          description: Sales territory of the opportunity
        probability:
          type: number
          format: float
          description: Probability of closing the opportunity
        stageName:
          type: string
          description: Current stage of the opportunity
        amount:
          type: number
          format: double
          description: Monetary value of the opportunity
        currency:
          type: string
          description: Currency of the opportunity amount
        owner:
          type: string
          description: Owner of the opportunity
        dateCreated:
          type: string
          format: date-time
          description: Date and time the opportunity was created
        closeDate:
          type: string
          format: date-time
          description: Expected or actual close date of the opportunity
        serviceLine:
          type: string
          description: Service line associated with the opportunity
        parentAccountId:
          type: integer
          description: Identifier of the parent account
        parentAccount:
          type: string
          description: Name of the parent account
      required:
        - id
        - account
        - stageName
        - amount

    OrderHeader:
  type: object
  properties:
    id:
      type: integer
      description: Unique identifier for the order
    opportunityID:
      type: integer
      description: Associated opportunity identifier
    salesDocNumber:
      type: string
      description: Sales document number
    salesDocType:
      type: string
      description: Type of sales document
    salesOrganisation:
      type: string
      description: Sales organisation
    distributionChannel:
      type: string
      description: Distribution channel
    parentCustomerID:
      type: integer
      description: Identifier for the parent customer
    parentCustomer:
      type: string
      description: Name of the parent customer
    localCustomerID:
      type: string
      description: Identifier for the local customer
    localCustomer:
      type: string
      description: Name of the local customer
    dateCreated:
      type: string
      format: date-time
      description: Date the order was created
    createdBy:
      type: string
      description: Name of the person who created the order
  required:
    - id
    - opportunityID
    - parentCustomerID
    - dateCreated

paths:
  /opportunities:
    get:
      summary: Get all opportunities
      operationId: GetAllOpportunities
      tags:
        - Opportunity
      responses:
        '200':
          description: Successful response with list of opportunities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Opportunity'

    post:
      summary: Create a new opportunity
      operationId: CreateOpportunity
      tags:
        - Opportunity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Opportunity'
      responses:
        '201':
          description: Opportunity created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Opportunity'
        '400':
          description: Invalid input

  /opportunities/{id}:
    get:
      summary: Get opportunity by ID
      operationId: GetOpportunityById
      tags:
        - Opportunity
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response with opportunity details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Opportunity'
        '404':
          description: Opportunity not found

    put:
      summary: Update an existing opportunity
      operationId: UpdateOpportunity
      tags:
        - Opportunity
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Opportunity'
      responses:
        '204':
          description: Opportunity updated successfully
        '400':
          description: Invalid input
        '404':
          description: Opportunity not found

    delete:
      summary: Delete an opportunity
      operationId: DeleteOpportunity
      tags:
        - Opportunity
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Opportunity deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Opportunity'
        '404':
          description: Opportunity not found

  /opportunities/account/{account}:
    get:
      summary: Get opportunities by account name
      operationId: GetOpportunitiesByAccountName
      tags:
        - Opportunity
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with opportunities for the account
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Opportunity'

  /opportunities/parentAccount/{parentAccount}:
    get:
      summary: Get opportunities by parent account name
      operationId: GetOpportunitiesByParentAccountName
      tags:
        - Opportunity
      parameters:
        - name: parentAccount
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with opportunities for the parent account
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Opportunity'

  /opportunities/{id}/orders:
    get:
      summary: Get orders associated with an opportunity
      operationId: GetOrdersInOpportunityById
      tags:
        - Opportunity
        - OrderHeader
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response with orders for the opportunity
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderHeader'
        '404':
          description: Opportunity not found or no orders exist